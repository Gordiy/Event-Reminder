[{"/Users/gordiyrushynets/Desktop/React-Apps/Event-reminder/client/src/index.js":"1","/Users/gordiyrushynets/Desktop/React-Apps/Event-reminder/client/src/reportWebVitals.js":"2","/Users/gordiyrushynets/Desktop/React-Apps/Event-reminder/client/src/modules/EventForm/index.js":"3","/Users/gordiyrushynets/Desktop/React-Apps/Event-reminder/client/src/modules/EventForm/components/EventForm.jsx":"4","/Users/gordiyrushynets/Desktop/React-Apps/Event-reminder/client/src/modules/index.js":"5"},{"size":2526,"mtime":1611434910002,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":1608758403266,"results":"8","hashOfConfig":"7"},{"size":74,"mtime":1610568969688,"results":"9","hashOfConfig":"7"},{"size":1843,"mtime":1611198896599,"results":"10","hashOfConfig":"7"},{"size":50,"mtime":1610659056936,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14","usedDeprecatedRules":"15"},"19plzez",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},"/Users/gordiyrushynets/Desktop/React-Apps/Event-reminder/client/src/index.js",["26"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css'\nimport {EventForm} from './modules';\nimport 'react-calendar/dist/Calendar.css';\nimport reportWebVitals from './reportWebVitals';\nimport Calendar from 'react-calendar';\nimport { Modal } from 'react-bootstrap';\nconst axios = require('axios').default;\n// import { Button } from 'react-bootstrap';\n\n\nclass Popup extends React.ComponentÂ {\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\thours: 1,\n\t\t\tminutes: 1,\n\t\t\tdate: new Date(props.date),\n\t\t\tlabel: '',\n\t\t\ttext: ''\n\t\t};\n\t\tthis.base_url = 'http://localhost:8000';\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\n\t\tthis.handleChange = this.handleChange.bind(this);\n\t}\n\n\thandleSubmit = (event) => {\n\t\tconsole.log(\"Submit state\", this.state)\n\t\tevent.preventDefault();\n\t\tfetch(`${this.base_url}/add-event`, {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t},\n\t\t\tbody: JSON.stringify(this.state),\n\t\t})\n\t\t.then((res) => {\n\t\t\tconsole.log(res.text())\n\t\t})\n\t\t.then((result) => {\n\t\t\tconsole.log(\"result\", result)\n\t\t})\n\t\t.catch((err) => console.log('error'))\n\t}\n\t\t\n\thandleChange = (event) => {\n\t\tthis.setState({[event.target.name]: event.target.value});\n\t}\n\n\trender() {\n\t\tconsole.log(\"state\", this.state);\n\t\treturn (\n\t\t\t<Modal.Dialog>\n\t\t\t\t<Modal.Header closeButton onClick={this.props.closePopup}>\n\t\t\t\t\t<Modal.Title>Create Notification</Modal.Title>\n\t\t\t\t</Modal.Header>\n\n\t\t\t\t<Modal.Body>\n\t\t\t\t\t<EventForm \n\t\t\t\t\t\thandleSubmit={this.handleSubmit}\n\t\t\t\t\t\thandleChange={this.handleChange}\n\t\t\t\t\t/>\n\t\t\t\t</Modal.Body>\n\t\t\t</Modal.Dialog>\n\t\t);\n\t}\n  }\n\nclass EventCalendar extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tshowPopup: false\n\t\t  };\n\n\t\tthis.togglePopup = this.togglePopup.bind(this);\n\t\tthis.date = undefined;\n\t}\n\n\ttogglePopup(date) {\n\t\tthis.date = date;\n\t\tthis.setState({\n\t\t  showPopup: !this.state.showPopup\n\t\t});\n\t  }\n\n\trender() {\n\t\treturn(\n\t\t\t\t<div className='app'>\n\t\t\t\t\t<Calendar onClickDay={this.togglePopup} />\n\t\t\t\t\t{this.state.showPopup ? \n\t\t\t\t\t\t<Popup\n\t\t\t\t\t\t\ttext='Close Me'\n\t\t\t\t\t\t\tclosePopup={this.togglePopup.bind(this)}\n\t\t\t\t\t\t\tdate={this.date}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t: null\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t)\n\t}\n}\n\nReactDOM.render(\n\t<div>\n\t\t<EventCalendar />\n\t</div>,\n  document.querySelector('#root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["27","28"],"/Users/gordiyrushynets/Desktop/React-Apps/Event-reminder/client/src/reportWebVitals.js",[],"/Users/gordiyrushynets/Desktop/React-Apps/Event-reminder/client/src/modules/EventForm/index.js",[],"/Users/gordiyrushynets/Desktop/React-Apps/Event-reminder/client/src/modules/EventForm/components/EventForm.jsx",["29"],"import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button'\n\n\nclass EventForm extends React.Component {\n    constructor() {\n        super()\n    }\n\n    render() {\n        const hours = [];\n        for (let index = 1; index <= 24; index++) {\n            hours.push(<option value={index}>{index}</option>)\n        }\n\n        const minutes = [];\n        for (let index = 1; index <= 60; index++) {\n            minutes.push(<option>{index}</option>)\n        }\n\n        return (\n            <Form onSubmit={this.props.handleSubmit}>\n                <Form.Group controlId=\"formBasicEmail\">\n                    <Form.Label>Hours</Form.Label>\n                    <Form.Control as=\"select\" name=\"hours\" onChange={this.props.handleChange}>\n                        {hours}\n                    </Form.Control>\n\n                    <Form.Label>Minutes</Form.Label>\n                    <Form.Control as=\"select\" name=\"minutes\" onChange={this.props.handleChange}>\n                        {minutes}\n                    </Form.Control>\n\n                    <Form.Label>Notification Label</Form.Label>\n                    <Form.Control type=\"text\" name=\"label\" placeholder=\"Label\" onChange={this.props.handleChange} />\n                </Form.Group>\n\n                <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n                    <Form.Label>Notification Text</Form.Label>\n                    <Form.Control as=\"textarea\" name=\"text\" rows={3} onChange={this.props.handleChange} />\n                </Form.Group>\n                <Form.Group controlId=\"formBasicCheckbox\">\n                    <Button  type=\"submit\" value=\"Submit\" variant=\"primary\">Save</Button>\n                </Form.Group>\n            </Form>\n        )\n    }\n}\n\nexport default EventForm;",["30","31"],"/Users/gordiyrushynets/Desktop/React-Apps/Event-reminder/client/src/modules/index.js",[],{"ruleId":"32","severity":1,"message":"33","line":9,"column":7,"nodeType":"34","messageId":"35","endLine":9,"endColumn":12},{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","severity":1,"message":"41","line":8,"column":5,"nodeType":"42","messageId":"43","endLine":10,"endColumn":6},{"ruleId":"36","replacedBy":"44"},{"ruleId":"38","replacedBy":"45"},"no-unused-vars","'axios' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["46"],"no-negated-in-lhs",["47"],"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor",["46"],["47"],"no-global-assign","no-unsafe-negation"]